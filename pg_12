#include <stdio.h>
#include <stdlib.h>
#define MAX_EMPLOYEES 50
#define MAX_MEMORY_LOCATIONS 100
struct Employee {
int key;
char name[50];
int age;
};
struct Employee* hashTable[MAX_MEMORY_LOCATIONS];
int hashFunction(int key, int m) {
    return key % m;
}
void insertEmployee(int key, char* name, int age, int m) {
int hashIndex = hashFunction(key, m);
while (hashTable[hashIndex] != NULL) {
hashIndex = (hashIndex + 1) % m;
}
struct Employee* emp = (struct Employee*)malloc(sizeof(struct Employee));
emp->key = key;
snprintf(emp->name, sizeof(emp->name), "%s", name);
emp->age = age;
hashTable[hashIndex] = emp;
}
void displayHashTable(int m) {
printf("\nEmployee Records in the Hash Table:\n");
for (int i = 0; i < m; i++) {
if (hashTable[i] != NULL) {
printf("Memory Location %d -> Key: %d, Name: %s, Age: %d\n", i, hashTable[i]->key, hashTable[i]->name, hashTable[i]->age);
}
}
}
void searchEmployee(int key, int m) {
int hashIndex = hashFunction(key, m);
while (hashTable[hashIndex] != NULL) {
if (hashTable[hashIndex]->key == key) {
printf("\nEmployee Found: Key: %d, Name: %s, Age: %d\n", hashTable[hashIndex]->key, hashTable[hashIndex]->name, hashTable[hashIndex]->age);
return;
}
hashIndex = (hashIndex + 1) % m;
}
printf("\nEmployee with Key %d not found.\n", key);
}
int main() {
int m, n, key, age;
char name[50];
for (int i = 0; i < MAX_MEMORY_LOCATIONS; i++) {
hashTable[i] = NULL;
}
printf("Enter the number of memory locations (m) in the hash table: ");
scanf("%d", &m);
printf("Enter the number of employees (N): ");
scanf("%d", &n);
for (int i = 0; i < n; i++) {
printf("\nEnter employee %d details:\n", i + 1);
printf("Key (4-digit): ");
scanf("%d", &key);
printf("Name: ");
scanf("%s", name);
printf("Age: ");
scanf("%d", &age);
insertEmployee(key, name, age, m);
}
displayHashTable(m);
printf("\nEnter a key to search for an employee: ");
scanf("%d", &key);
searchEmployee(key, m);
return 0;
}
